networks:
  frontend:
    external: true
  app:
    driver: bridge
    internal: false

services:
  openwebui:
    build:
      dockerfile: Dockerfile
      context: open-webui
      args:
        USE_CUDA: false
        USE_OLLAMA: false
    restart: unless-stopped
    environment:
      # See https://docs.openwebui.com/getting-started/env-configuration/
      DATA_DIR: /app/backend/data
      ENV: dev
      PORT: 8080
      ENABLE_OLLAMA_API: false
      OLLAMA_BASE_URL: 'http://localhost:11434'
      ENABLE_OPENAI_API: false
      COMFYUI_API_KEY: '132456789'
    networks:
      - app
      - frontend
    ports:
      - "8080"
    depends_on:
      postgres:
        condition: service_healthy
    cap_add:
      - SYS_ADMIN
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - .docker/data/storage:/app/backend/data
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.rule=Host(`${COMPOSE_SERVER_DOMAIN}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.entrypoints=web"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_SERVER_DOMAIN}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=websecure"

  postgres:
    image: postgres:17
    environment:
      POSTGRES_PASSWORD: postgres
    networks:
      - app
    ports:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - .docker/data/postgres:/var/lib/postgresql/data 
