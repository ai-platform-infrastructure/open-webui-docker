services:
  # https://github.com/Soluto/oidc-server-mock
  idp:
    image: ghcr.io/soluto/oidc-server-mock:latest
    # Let this container be accessible both internally and externally on the same domain.
    container_name: idp-${COMPOSE_DOMAIN}
    networks:
      - app
      - frontend
    ports:
      - '80'
      - '443'
    volumes:
      - .:/tmp/config:ro
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=frontend"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_idp.rule=Host(`idp-${COMPOSE_DOMAIN}`)"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}_idp.loadbalancer.server.port=443"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}_idp.loadbalancer.server.scheme=https"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_idp.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    environment:
      # https://github.com/Soluto/oidc-server-mock?tab=readme-ov-file#https
      ASPNETCORE_URLS: https://+:443;http://+:80
      ASPNETCORE_Kestrel__Certificates__Default__Password: mock
      ASPNETCORE_Kestrel__Certificates__Default__Path: /tmp/config/.docker/oidc-server-mock/cert/docker.pfx
      ASPNETCORE_ENVIRONMENT: Development

      SERVER_OPTIONS_INLINE: |
        AccessTokenJwtType: JWT
        Discovery:
          ShowKeySet: true
        Authentication:
          CookieSameSiteMode: Lax
          CheckSessionCookieSameSiteMode: Lax

      LOGIN_OPTIONS_INLINE: |
        {
          "AllowRememberLogin": false
        }

      LOGOUT_OPTIONS_INLINE: |
        {
          "AutomaticRedirectAfterSignOut": true
        }

      CLIENTS_CONFIGURATION_INLINE: |
        - ClientId: client-id
          ClientSecrets: [client-secret]
          Description: Mock IdP
          AllowedGrantTypes:
            # - client_credentials
            # - implicit
            - authorization_code
          # https://github.com/Soluto/oidc-server-mock/issues/46#issuecomment-704963181
          RequireClientSecret: false
          AllowAccessTokensViaBrowser: true
          # https://github.com/Soluto/oidc-server-mock/issues/26#issuecomment-705022941
          AlwaysIncludeUserClaimsInIdToken: true
          AllowedScopes:
            - openid
            - profile
            - email
          ClientClaimsPrefix: ''
          RedirectUris:
            - '*'
          # https://github.com/Soluto/oidc-server-mock/issues/60
          PostLogoutRedirectUris:
            - '*'
          # https://github.com/Soluto/oidc-server-mock/issues/46#issuecomment-704845375
          RequirePkce: false

      # Needed to set custom claim types in "profile"
      # https://github.com/Soluto/oidc-server-mock/issues/123#issuecomment-1427129278
      # https://github.com/Soluto/oidc-server-mock/blob/master/README.md#simple-configuration
      # https://docs.docker.com/compose/compose-file/compose-file-v3/#environment
      OVERRIDE_STANDARD_IDENTITY_RESOURCES: 'true'
      IDENTITY_RESOURCES_INLINE: |
        # https://auth0.com/docs/get-started/apis/scopes/openid-connect-scopes#standard-claims
        - Name: openid
          ClaimTypes:
            - sub
        - Name: email
          ClaimTypes:
            - email
        - Name: profile
          ClaimTypes:
            # Add your custom claims here
            - name
            - upn
            - role
            - magistratsafdeling

      USERS_CONFIGURATION_INLINE: |
        - SubjectId: 1
          Username: admin
          Password: admin
          Claims:
          - Type: email
            Value: 'admin@itkdev.dk'
            ValueType: string
          - Type: upn
            Value: 'admin@itkdev.dk'
            ValueType: string
          - Type: name
            Value: 'Admin Adminsen'
            ValueType: string
          - Type: magistratsafdeling
            Value: 'Department 1'
            ValueType: string
          - Type: role
            Value: '["admin"]'
            ValueType: json

        - SubjectId: 2
          Username: editor
          Password: editor
          Claims:
          - Type: email
            Value: 'editor@itkdev.dk'
            ValueType: string
          - Type: upn
            Value: 'editor@itkdev.dk'
            ValueType: string
          - Type: name
            Value: 'Editor Editorsen'
            ValueType: string
          - Type: magistratsafdeling
            Value: 'Department 2'
            ValueType: string
          - Type: role
            Value: '["editor"]'
            ValueType: json

        - SubjectId: 3
          Username: user
          Password: user
          Claims:
          - Type: email
            Value: 'user@itkdev.dk'
            ValueType: string
          - Type: upn
            Value: 'user@itkdev.dk'
            ValueType: string
          - Type: name
            Value: 'User Usersen'
            ValueType: string
          - Type: magistratsafdeling
            Value: 'Department 3'
            ValueType: string
          - Type: role
            Value: '["user"]'
            ValueType: json
