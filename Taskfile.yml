version: '3'

# https://taskfile.dev/usage/#env-files
dotenv: [ '.env.local', '.env' ]

vars:
  # https://taskfile.dev/reference/templating/
  BASE_URL: '{{.TASK_BASE_URL | default .COMPOSE_SERVER_DOMAIN | default .COMPOSE_DOMAIN }}'
  DOCKER_COMPOSE: '{{ .TASK_DOCKER_COMPOSE | default "itkdev-docker-compose" }}'
  OPEN_WEBUI_REPO: 'https://github.com/itk-dev/open-webui.git'
  OPEN_WEBUI_VERSION: 'v0.6.27'
  PROD_OPEN_WEBUI_VERSION: 'v0.6.27-1'
  TARGET_DIR: 'open-webui'
  PATCHES:
    - name: 'Frontend changes - login banner and sidebar logo'
      url: 'https://patch-diff.githubusercontent.com/raw/itk-dev/open-webui/pull/37.diff'
    - name: 'Pinned info banner'
      url: 'https://patch-diff.githubusercontent.com/raw/itk-dev/open-webui/pull/32.diff'
    - name: 'OIDC aak roles and groups'
      url: 'https://patch-diff.githubusercontent.com/raw/itk-dev/open-webui/pull/33.diff'
    - name: 'Ensured that role names from OIDC is kept'
      url: 'https://patch-diff.githubusercontent.com/raw/itk-dev/open-webui/pull/34.diff'
    - name: 'Adding support for redis session storage'
      url: 'https://patch-diff.githubusercontent.com/raw/open-webui/open-webui/pull/17223.diff'
    - name: 'Fixing docker image size'
      url: 'https://github.com/open-webui/open-webui/commit/be373e9fd42ac73b0302bdb487e16dbeae178b4e.diff'

tasks:
  default:
    desc: 'List all tasks'
    cmds:
      - task --list-all
    silent: true

  compose:
    desc: "Run `docker compose` command. Example: task compose -- up --detach"
    cmds:
      - '{{ .DOCKER_COMPOSE }} {{ .CLI_ARGS }}'

  ####
  ## Git helpers
  ####
  git:sync:tags:
    desc: "Sync tags from upstream repos"
    dir: "{{ .TARGET_DIR }}"
    cmds:
      - |
        echo "This assumes that you already have synced the main and dev branches with upstream on github!"
        echo ""
        read -p "Are you sure you want to continue? (y/N): " confirm
        if [ "$confirm" != "y" ] && [ "$confirm" != "Y" ]; then
          echo "Sync cancelled."
          exit 1
        fi
      - git remote add upstream https://github.com/open-webui/open-webui
      - git fetch --tags upstream
      - git push --tags
      - git remote rm upstream
    silent: true

  git:clone:
    desc: "Clone open-webui core"
    cmds:
      - git clone {{ .OPEN_WEBUI_REPO }}
      - git checkout {{ .OPEN_WEBUI_VERSION }}
    silent: true

  git:checkout:dev:
    desc: "Checkout open-webui dev branch"
    dir: "{{ .TARGET_DIR }}"
    cmds:
      - git reset --hard
      - git checkout .
      - git checkout dev
    silent: true

  git:reset:
    desc: "Reset open-webui checkout to a specific version"
    dir: "{{ .TARGET_DIR }}"
    cmds:
      - git reset --hard
      - git checkout .
      - git checkout {{ .OPEN_WEBUI_VERSION }}
    silent: true

  ####
  ## Install and setup (local helpers)
  ####
  patch:
    desc: "Patch open-webui with custom patches"
    dir: "{{ .TARGET_DIR }}"
    cmds:
      - for: { var: PATCHES }
        cmd: curl -sSL {{ .ITEM.url }} | patch -p1 --no-backup-if-mismatch
    silent: false

  install:
    desc: "Install new web-ui"
    cmds:
      - |
        echo "This will reset all changes and install a new version of open-webui:"
        echo ""
        read -p "Are you sure you want to continue? (y/N): " confirm
        if [ "$confirm" != "y" ] && [ "$confirm" != "Y" ]; then
          echo "Install cancelled."
          exit 1
        fi
      - task git:reset
      - task patch
      - task copy:config
      - task compose -- pull
      - task compose -- up --detach --force-recreate
      - task wui:frontend:build
    silent: true

  open:
    desc: "Open-webui in the browser"
    cmds:
      - open http://{{ .BASE_URL }}
    silent: true

  copy:config:
    desc: "Copy config file from example, if it does not exist"
    cmds:
      - if ! [ -f litellm_config.yaml ]; then cp litellm_config.example.yaml litellm_config.yaml; fi
      - if ! [ -f .env ]; then cp .env.default .env; fi
    silent: true

  wui:backend:build:
    desc: "Build container with newest requirements"
    cmds:
      - task compose -- build --pull
    silent: true

  wui:frontend:build:
    desc: "Build frontend"
    cmds:
      - task compose -- run --rm -it node npm ci --force
      - task compose -- run --rm -it node npm run build
    silent: true

  wui:frontend:dev:build:
    desc: "Build frontend with enviroment set to dev"
    cmds:
      - task compose -- run --rm -it -e ENV=dev node npm ci --force
      - task compose -- run --rm -it -e ENV=dev node npm run build
    silent: true

  ####
  ## Production build
  ####
  prod:build:
    desc: Build docker image and push to docker hub
    cmds:
      - |
        echo "You are about to build and push production images:"
        echo "  - itkdev/openwebui:{{.PROD_OPEN_WEBUI_VERSION}}"
        echo "  - itkdev/openwebui:latest"
        echo ""
        read -p "Are you sure you want to continue? (y/N): " confirm
        if [ "$confirm" != "y" ] && [ "$confirm" != "Y" ]; then
          echo "Build cancelled."
          exit 1
        fi
      - task: prod:prepare
      - COMPOSE_BAKE=true docker compose --file docker-compose.yml build --no-cache --pull openwebui
      - docker tag openwebui-openwebui itkdev/openwebui:{{.PROD_OPEN_WEBUI_VERSION}}
      - docker tag openwebui-openwebui itkdev/openwebui:latest
      - docker push itkdev/openwebui:{{.PROD_OPEN_WEBUI_VERSION}}
      - docker push itkdev/openwebui:latest
    silent: true

  prod:prepare:
    desc: "Prepare production build - reset git, patch"
    internal: true
    cmds:
      - task git:reset
      - task patch
